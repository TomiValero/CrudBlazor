@page "/libros"
@using BlazorCrud.Modelos
@using BlazorCrud.Repositorio
@inject IRepositorio Repositorio


<h1>Crud con Blazor Server y MSSQLLOCALDBS</h1>

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-12">
                <h2 class="text-dark">Lista de libros</h2>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Titulo</th>
                    <th>Descripcion</th>
                    <th>Autor</th>
                    <th>Paginas</th>
                    <th>Precio</th>
                    <th>Fecha de Creacion</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var libro in listaLibros)
                {
                    <tr>
                        <th>@libro.Id</th>
                        <th>@libro.Titulo</th>
                        <th>@libro.Descripcion</th>
                        <th>@libro.Autor</th>
                        <th>@libro.Paginas</th>
                        <th>@libro.Precio</th>
                        <th>@libro.Fecha</th>
                        <th>
                            <a href="editar-libro/@libro.Id" class="btn btn-success btn-sm"><span class="oi oi-plus" aria-hidden="true"></span> Editar</a>
                            <button @onclick="@( () => BorrarLibro(libro.Id))" class="btn btn-danger btn-sm"><span class="oi oi-delete" aria-hidden="true"></span> Borrar</button>
                        </th>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>





@code {
    private List<Libro> listaLibros = new List<Libro>();

    protected override async Task OnInitializedAsync()
    {
        listaLibros = await Repositorio.GetLibros();
    }

    private async Task BorrarLibro(int id){

        await Repositorio.EliminarLibro(id);

        listaLibros = await Repositorio.GetLibros();
    }
}
